import matplotlib.pyplot as plt

k = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]
# bot 1 (400 trials | 50x50)
bot_1 = [1202.34, 741.31, 516.82, 418.245, 325.4175, 292.2625, 257.4075, 254.975, 244.5675, 247.005, 239.19, 252.5,
         264.7275, 264.97, 281.8275, 284.0625, 303.8225, 339.9175, 327.735, 341.0525, 358.94, 372.68, 398.7625,
         362.8075]
# bot 2A (400 trials | 50x50)
bot_2A = [1016.1375, 580.5225, 424.5875, 316.1025, 294.41, 259.1975, 257.795, 268.025, 279.7075, 301.7225, 323.3375,
          361.7275, 360.9375, 383.61, 395.015, 440.1625, 429.615, 424.95, 405.3475, 432.3625, 457.1675, 412.7,
          410.6975, 407.425]
# bot 2B (400 trials | 50x50)
bot_2B = [1172.58, 659.5575, 439.42, 361.365, 293.395, 259.905, 249.06, 220.18, 229.495, 228.6675, 233.4675, 238.9725,
          254.0875, 264.775, 284.55, 287.755, 291.39, 319.735, 317.11, 376.505, 382.49, 410.27, 412.06, 416.69]
# bot 2C (400 trials | 50x50)
bot_2C = [1079.535, 600.05, 423.87, 351.795, 297.7575, 270.485, 250.61, 238.3775, 232.1225, 236.3025, 230.3075, 225.13,
          260.245, 272.0275, 282.4975, 299.88, 298.3625, 308.775, 328.3525, 358.91, 364.72, 399.0725, 397.425, 403.975]
# bot 5 (400 trials | 50x50)
bot_5 = [1514.6225, 1024.06, 729.1, 585.7325, 506.2975, 468.9075, 477.2275, 472.7825, 492.08, 521.635, 550.2675,
         596.965, 619.575, 683.3625, 718.5225, 783.8475, 822.48, 859.6925, 890.205, 932.72, 977.435, 961.5175,
         947.28, 970.16]
# bot 6C (400 trials | 50x50)
bot_6C = [1327.785, 852.08, 587.02, 506.22, 475.325, 444.18, 445.265, 460.8375, 454.678, 487.564, 563.8275, 615.725,
          640.255, 694.65, 717.345, 780.22, 832.6425, 871.0025, 935.87, 983.24, 1042.6725, 1032.1775, 1019.495, 1001.41]
# bot 6A (400 trials | 50x50)
bot_6A = [1352.455, 829.185, 624.87, 498.7075, 490.26, 526.325, 540.2525, 600.7775, 655.7475, 719.6575, 809.21,
          885.7375, 934.16, 1019.8, 1069.665, 1144.175, 1088.495, 1110.1475, 1111.9075, 1106.4075, 1067.775, 1037.0325,
          1003.63, 1012.0975]
# bot 6B (400 trials | 50x50)
bot_6B = [1504.2675, 934.5775, 641.165, 540.155, 471.8375, 442.5325, 453.2625, 459.98, 486.5975, 522.8975, 571.315,
          605.0125, 664.6475, 733.5125, 750.3025, 826.455, 883.9525, 912.1375, 969.13, 1004.19, 1021.1925, 1076.085,
          1030.3625, 1003.3575]

alpha = [0.001, 0.005, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 0.13, 0.14, 0.15, 0.16,
         0.17, 0.18, 0.19, 0.2, 0.21, 0.22, 0.23, 0.24, 0.25, 0.26, 0.27, 0.28, 0.29, 0.3, 0.31, 0.32, 0.33, 0.34, 0.35,
         0.36, 0.37, 0.38, 0.39, 0.4, 0.41, 0.42, 0.43, 0.44, 0.45, 0.46, 0.47, 0.48, 0.49, 0.5, 0.51, 0.52, 0.53, 0.54,
         0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3, 1.35, 1.4, 1.45, 1.5,
         1.55, 1.6, 1.65, 1.7, 1.75, 1.8, 1.85, 1.9, 1.95, 2.0]
# bot 3 (400 trials | 50x50)
bot_3 = [1475.817, 655.908, 551.665, 503.859, 517.577, 533.998, 555.889, 637.723, 684.879, 738.137, 771.278, 862.580,
         889.759, 992.332,
         977.248, 997.188, 1073.916, 1167.249, 1248.791, 1316.683, 1363.689, 1404.798, 1395.003, 1396.835, 1490.008,
         1623.771, 1554.711, 1510.407, 1710.474, 1634.065, 1761.749, 1741.421, 1754.416, 1710.430, 1765.067, 1903.586,
         1960.455, 1945.805, 1855.581, 1922.772, 1927.887, 1968.375, 1943.926, 1981.631, 1977.680, 2013.863, 2096.480,
         2122.492, 2087.893, 2085.934, 2201.495, 2075.692, 2182.730, 2134.105, 2054.949, 1996.310, 2130.187, 2243.029,
         2518.563, 2493.064, 2108.0, 2280.105, 2247.670, 2302.698, 2266.623, 2388.783, 2501.850, 2516.159, 2350.044,
         2462.705, 2626.710, 2373.745, 2342.423, 2217.189, 2441.932, 2097.017, 2412.576, 2440.763, 2437.675, 2485.576,
         2425.264, 2541.618, 2476.0, 2318.104, 2534.376, 2515.279]
# bot 4 (400 trials | 50x50)
bot_4 = [1319.353, 646.6182336182336, 548.227, 460.4975, 423.2375, 402.26, 388.18, 398.265, 394.235, 415.405, 411.3625,
         437.925, 444.0075, 435.3425,
         464.6475, 509.48, 587.3575, 526.375, 555.68, 597.02, 643.62, 598.005, 687.37, 665.245, 752.41, 766.0075,
         751.425, 788.2075, 805.3875, 812.6975, 839.0475, 871.89, 924.535, 910.2475, 929.97, 922.235, 953.9175, 966.42,
         1006.36, 1010.7325, 1017.8975, 1035.545, 1044.1725, 1008.3625, 1117.1475, 990.715, 1043.7775, 1050.1375,
         1098.54, 1087.6325, 1140.26, 1137.2425, 1170.8725, 1158.085, 1177.5525, 1161.935, 1188.6325, 1228.55, 1191.3,
         1189.8675, 1398.165, 1261.6875, 1308.0825, 1395.715, 1359.2825, 1299.61, 1525.21, 1381.9875, 1431.355,
         1414.0125, 1259.755, 1452.98, 1469.99, 1407.4275, 1502.1875, 1410.61, 1513.555, 1401.515, 1383.3125, 1530.6025,
         1448.02, 1533.1325, 1438.175, 1532.72, 1631.5475, 1510.9375]

# truncated alpha values for time
alpha_89 = [0.001, 0.005, 0.01, 0.02, 0.03, 0.04, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6,
            0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0]
# bot 7B values bot only for the truncated alpha values
bot_7 = [2058.276, 1663.483, 1269.391, 1063.097, 867.461, 781.067, 722.004, 683.511, 722.389, 849.553, 847.284,
         929.389, 943.738, 969.713, 1027.104, 933.321, 1061.044, 993.698, 1052.695, 1075.002, 1095.600, 1052.615,
         1070.673, 1105.905, 1087.177, 1061.778]
# bot 8 (200 trials | 30x30) - using truncated alpha values
bot_8 = [2187.676, 1231.402, 863.119, 677.169, 560.059, 561.328, 523.736, 584.233, 647.542, 674.383, 800.621, 872.139,
         850.915, 943.482, 958.054, 1000.442, 1015.746, 1026.845, 1151.054, 1023.243, 1111.582, 1121.726, 1095.054,
         1073.467, 1154.782, 1055.78]
# bot 9 (200 trials | 30x30) - using truncated alpha values
bot_9 = [1154.726, 834.279, 594.88, 504.483, 431.468, 437.963, 394.455, 362.815, 409.303, 434.597, 446.418, 511.761,
         586.666, 616.930, 653.233, 641.582, 641.338, 660.447, 701.427, 674.199, 761.089, 686.557, 728.233, 763.815,
         732.467, 758.741]


def plotter(k_arr: list[int], bot_data: list[list[float]], bot_labels: list[str], bot_colors: list[str],
            setting: str) -> None:
    """
    Plotter function that takes care of generating the graph and labeling the graph appropriately
    :param k_arr: parameter to input
    :param bot_data: list of bot data for each bot we want to graph (on the same plot)
    :param bot_labels: labels for each bot array
    :param bot_colors: the colors of the line for each bot
    :param setting: can be either 'k', 'alpha', or 'alpha_89' (helps determine title and labels, graph windows)
    :return: None
    """
    for bot_arr, label, color in zip(bot_data, bot_labels, bot_colors):
        plt.plot(k_arr, bot_arr, color=color, marker='.', label=label)
    if setting == 'alpha':
        plt.xlim(0, 2)
        plt.xlabel('alpha values')
        plt.ylabel('Average Time Spent (400 trials per alpha)')
        plt.title('Time To Plug Leak vs alpha Value')
    elif setting == 'alpha_89':
        plt.xlim(0, 1)
        plt.xlabel('alpha values')
        plt.ylabel('Average Time Spent (200 trials per alpha)')
        plt.title('Time To Plug Leak vs alpha Value')
    else:
        plt.xlim(0, 25)
        plt.xlabel('k Values')
        plt.ylabel('Average Time Spent (400 trials per k)')
        plt.title('Time To Plug Leak vs k Value')
    plt.legend()
    plt.show()


if __name__ == "__main__":
    plotter(k, [bot_5, bot_6C], ["Bot 5", "Bot 6"], ['r', 'black'], 'k')  # plot 5v6
    plotter(alpha, [bot_3, bot_4], ["Bot 3", "Bot 4"], ['r', 'b'], 'alpha')  # plot 3v4
    plotter(alpha_89, [bot_7, bot_8, bot_9], ["Bot 7", "Bot 8", "Bot 9"], ['r', 'b', 'g'], 'alpha_89')  # plot 7v8v9
    plotter(k, [bot_1, bot_2A, bot_2B], ["Bot 1", "Bot 2A", "Bot 2B"], ['r', 'b', 'g'], 'k')  # plot 1v2Av2B
    plotter(k, [bot_1, bot_2C], ["Bot 1", "Bot 2"], ['r', 'black'], 'k')  # plot 1vs2(final version)
