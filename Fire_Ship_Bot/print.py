import matplotlib.pyplot as plt

# arrays of frequency of success
bot_1 = [1.0, 0.9825, 0.96, 0.94, 0.9525, 0.9275, 0.93, 0.9325, 0.8975, 0.8925, 0.8925, 0.8775, 0.8325, 0.865, 0.84, 0.805, 0.82, 0.785, 0.76, 0.75, 0.7625, 0.7425, 0.74, 0.7025, 0.7125, 0.6975, 0.6925, 0.6675, 0.7175, 0.6225, 0.6225, 0.62, 0.6, 0.6475, 0.64, 0.5825, 0.5675, 0.605, 0.59, 0.5575, 0.5825, 0.495, 0.51, 0.535, 0.5325, 0.535, 0.55, 0.4975, 0.5125, 0.46, 0.485]
bot_3 = [1.0, 0.9925, 0.9975, 0.9925, 0.9775, 0.9625, 0.9525, 0.97, 0.955, 0.935, 0.9325, 0.8925, 0.85, 0.8425, 0.8225, 0.88, 0.865, 0.8175, 0.7875, 0.7575, 0.7675, 0.77, 0.7675, 0.7225, 0.7625, 0.7225, 0.72, 0.6625, 0.665, 0.655, 0.6575, 0.645, 0.605, 0.59, 0.625, 0.5875, 0.6175, 0.5725, 0.5625, 0.5775, 0.53, 0.57, 0.5275, 0.535, 0.52, 0.5325, 0.55, 0.5625, 0.5, 0.4675, 0.46]
bot_2 = [1.0, 1.0, 0.99, 0.995, 0.995, 0.9675, 0.975, 0.94, 0.93, 0.9375, 0.9275, 0.9225, 0.9, 0.8975, 0.8575, 0.8725, 0.835, 0.805, 0.845, 0.765, 0.8, 0.7625, 0.715, 0.7225, 0.7175, 0.7425, 0.7025, 0.6875, 0.6975, 0.6775, 0.625, 0.7, 0.6575, 0.62, 0.605, 0.595, 0.5675, 0.5775, 0.57, 0.6225, 0.59, 0.5225, 0.535, 0.515, 0.515, 0.4975, 0.565, 0.5475, 0.51, 0.46, 0.4675]
bot_4 = [1.0, 1.0, 0.9825, 0.9975, 0.9825, 0.9825,0.975, 0.96, 0.95, 0.9525, 0.9225, 0.9375, 0.9275, 0.9125, 0.8825, 0.86, 0.81, 0.7875, 0.8075, 0.84, 0.7625, 0.7825, 0.7575, 0.73, 0.71, 0.695, 0.7275, 0.6525, 0.66, 0.7075, 0.61, 0.6325, 0.6, 0.695, 0.5825, 0.6025, 0.625, 0.5775, 0.5275, 0.575, 0.5725, 0.535, 0.5225, 0.5325, 0.535, 0.4725, 0.56, 0.565, 0.4725, 0.5225, 0.485]


q_values = []
for j in range(101):
    if j % 2 == 0:
        q_values.append(j/100)

# plot q values vs average success
plt.plot(q_values, bot_1, label='Bot 1', marker='.', linestyle='-', color='b')
plt.plot(q_values, bot_2, label='Bot 2', marker='.', linestyle='-', color='r')
plt.plot(q_values, bot_3, label='Bot 3', marker='.', linestyle='-', color='g')
plt.plot(q_values, bot_4, label='Bot 4', marker='.', linestyle='-', color='m')
plt.ylabel('Average frequency of success (300 trails)')
plt.xlabel('q (flamability constant)')
plt.legend()
plt.grid()
# show plot
plt.show()
